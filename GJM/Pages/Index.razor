@page "/"
@using GJM.Data;
@using Markdig;
@using Microsoft.EntityFrameworkCore;
@using Helpers;
@inject IDbContextFactory<ApplicationDbContext> dbContextFactory

<PageTitle>Index</PageTitle>

<h1>Dados y Mepples!</h1>
@if(posts.Any() && markdownPipeline != null)
{
    <CardDeck>
        <Row>
            @foreach(var post in posts)
            {
                <Column ColumnSize="ColumnSize.Is4.IsAuto">
                    <Card>
                        <CardImage Source="https://blazorise.com/img/gallery/2.jpg" Alt="Card image cap 3"></CardImage>
                        <CardBody>
                            <CardTitle Size="5">@post.Tittle</CardTitle>
                            <CardText>
                                @((MarkupString)Markdown.ToHtml(post.Content, markdownPipeline))
                            </CardText>
                            <Button Color="Color.Primary">Abrir Entrada</Button>
                        </CardBody>
                    </Card>
                </Column>
            }
        </Row>
    </CardDeck>
}
else
{
  <p>Cargando...</p>   
}


@code {
    IList<Post> posts = new List<Post>();
    MarkdownPipeline? markdownPipeline;

    protected async override Task OnInitializedAsync()
    {
        markdownPipeline = new MarkdownPipelineBuilder()
                                .UseAdvancedExtensions()
                                .UseCustomMarkdownExtension()
                                .Build();

        using (var dbContext = dbContextFactory.CreateDbContext())
        {
            posts = await dbContext.Posts.ToListAsync();
        }
        StateHasChanged();
    }

}

